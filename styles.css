/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', 'Segoe UI', sans-serif;
    background-color: #212121;
    color: #7F7F7F;
    line-height: 1.6;
    padding: 20px;
}

.container {
    max-width: 700px;
    margin: 0 auto;
    padding: 20px;
}

h1 {
    color: #00CEF7;
    margin-bottom: 10px;
    font-weight: 500;
}

.description {
    margin-bottom: 30px;
    font-size: 14px;
}

/* Task tree styling */
#task-tree {
    width: 100%;
    overflow: hidden;
}

/* Task list styling */
.task-list {
    list-style: none;
    width: 100%;
    min-height: 2px; /* Ensure lists are always visible as drop targets */
    position: relative;
    z-index: 1;
}

/* Task item styling */
.task-item {
    padding: 4px 0;
    margin: 1px 0;
    border-radius: 4px;
    transition: background-color 0.2s ease;
    position: relative; /* Required for absolute positioning of children */
}

.task-item:hover {
    background-color: rgba(0, 206, 247, 0.05);
}

/* Task content styling */
.task-content {
    display: flex;
    align-items: center;
    cursor: grab;
    padding: 4px;
    position: relative;
    min-height: 36px; /* Minimum touch target size for mobile - reduced but still mobile-friendly */
    width: 100%;
}

.task-text {
    color: #7F7F7F;
    margin-left: 8px;
    flex-grow: 1;
    word-break: break-word; /* Prevent text overflow on small screens */
}

/* Toggle area styling for better touch targets */
.toggle-area {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 28px;
    min-height: 28px;
    margin-right: 2px;
    cursor: pointer;
    position: relative;
    z-index: 2; /* Ensure the toggle is above other elements */
}

/* Toggle button styling */
.toggle-btn {
    color: #7F7F7F;
    cursor: pointer;
    display: inline-block;
    font-size: 10px;
    transition: transform 0.2s;
    /* Still maintains touch target size while being more compact */
    padding: 6px;
}

.toggle-btn.expanded {
    transform: rotate(90deg);
}

/* Children container styling */
.task-children {
    padding-left: 20px;
    position: relative;
    margin-top: 1px;
    margin-bottom: 1px;
}

.task-children:before {
    content: '';
    position: absolute;
    left: 7px;
    top: 0;
    height: 100%;
    width: 1px;
    background-color: rgba(127, 127, 127, 0.2);
    z-index: -1;
}

/* Drag and drop styling */
.task-ghost {
    opacity: 0.5;
    background-color: rgba(0, 206, 247, 0.05);
}

.task-chosen {
    background-color: rgba(0, 206, 247, 0.1);
    box-shadow: 0 0 0 1px rgba(0, 206, 247, 0.2);
}

.task-drag {
    opacity: 0.8;
    background-color: rgba(33, 33, 33, 0.9) !important;
    box-shadow: 0 0 8px rgba(0, 206, 247, 0.3);
    outline: none !important;
    border: none !important;
}

/* Highlight empty containers to show they're valid drop targets */
.task-list:empty {
    min-height: 20px;
    background-color: rgba(0, 206, 247, 0.05);
    border: 1px dashed rgba(0, 206, 247, 0.3);
    border-radius: 4px;
    margin: 3px 0;
}

/* Specific styles for when forceFallback is used (cleaner appearance) */
.sortable-fallback {
    opacity: 0.4 !important;
    transform: scale(0.95);
    pointer-events: none;
}

.sortable-ghost {
    opacity: 0.5 !important;
    background-color: rgba(0, 206, 247, 0.1) !important;
    box-shadow: inset 0 0 0 1px rgba(0, 206, 247, 0.3);
    border-radius: 4px;
}

/* Clear drop area indications */
.sortable-drag + .sortable-ghost {
    display: none !important;
}

/* Make the dragged item cleaner */
body > .sortable-drag {
    position: fixed !important;
    z-index: 1000;
    margin: 0 !important;
    padding: 8px !important;
    background-color: rgba(33, 33, 33, 0.95) !important;
    box-shadow: 0 0 15px rgba(0, 206, 247, 0.2);
    border-radius: 4px;
    pointer-events: none;
}

/* Drop indicator styling - cleaner version */
.drop-indicator {
    display: none;
    height: 12px;
    margin: 0 0 1px 18px;
    background-color: transparent;
    border-radius: 2px;
}

/* Visual indication when dragging over a task */
.task-item.drag-over > .drop-indicator {
    display: block;
    background-color: rgba(0, 206, 247, 0.1);
    border: 1px dashed rgba(0, 206, 247, 0.3);
}

/* Indent zone - this appears on the right side of each task */
.indent-zone {
    position: absolute;
    top: 0;
    right: 0;
    width: 30px;
    height: 100%;
    z-index: 10;
    opacity: 0.2;
    transition: all 0.2s ease;
}

.indent-zone:hover, .indent-zone.active {
    background-color: rgba(0, 206, 247, 0.3);
    opacity: 1;
}

.indent-icon {
    position: absolute;
    top: 50%;
    right: 5px;
    transform: translateY(-50%);
    color: #00CEF7;
    font-weight: bold;
}

/* Task when hovered over indent zone */
.task-item.indent-hover {
    background-color: rgba(0, 206, 247, 0.15) !important;
    border-right: 3px solid #00CEF7 !important;
    border-top: 1px solid #00CEF7 !important;
    border-bottom: 1px solid #00CEF7 !important;
    box-shadow: 0 0 8px rgba(0, 206, 247, 0.4) !important;
}

/* Make confirmed parent items stand out during the operation */
.task-item.confirmed-parent, 
.task-item.force-become-parent,
.task-item.drop-created-container,
.task-item[data-should-become-parent="true"] {
    background-color: rgba(0, 206, 247, 0.1);
    box-shadow: 0 0 0 1px rgba(0, 206, 247, 0.5) !important;
}
