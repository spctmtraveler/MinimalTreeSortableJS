DUN Task Management Application – **Standalone Tasks‑Only Version**
(Single‑Panel, Tasks + Task View, Priority Flags Embedded)

---

## 0. Product & Technical Setup

*(Plain-vanilla build in index.html, styles.css, scripts.js—no frameworks, no Python)*

1. **Product Name & Branding**

   * **Name:** “DUN” Task Management Application
   * **Logo Placement:** Top-left of the application banner
   * **Design Style:** Minimalist, clean layout emphasizing whitespace for clarity and separation rather than heavy borders or lines

2. **Technology Stack**

   * **Languages:** Plain HTML, CSS, JavaScript (ES6)
   * **No Frameworks:** No React, Vue, or Python—just static files
   * **Drag-and-Drop:** Lightweight library (e.g., SortableJS) or HTML5 API
   * **Hosting:** Any static host (e.g., GitHub Pages, Replit static)

3. **Code Organization**

   * **index.html** for markup
   * **styles.css** for all styling
   * **scripts.js** for behavior
   * **All code** must be thoroughly commented for clarity

4. **Debug Logging**

   * Global `debug` flag in `scripts.js` toggles console logging of key actions (create, edit, sort, etc.)

5. **Data Persistence (Optional)**

   * For this prototype, tasks can be stored in a JavaScript array in memory or in `localStorage` if needed
   * No external database integration required

\--- **Data Persistence Abstraction** (`db.js` with `getTask`, `saveTask`, `deleteTask` …). Default = Replit DB.

---

## 1. Core Layout & Single‑Panel System

*(Only the Tasks View plus the Task View modal)*

* **Top Banner** (full‑width, docked at top)

  * Logo & product name (left)
  * **New Task input** + \[Add] button
  * **Filter dropdown** (All, Triage, Today, Tomorrow, This Week, Next Week, This Month, Next Month)
  * **Toggle “Priority Flags” button** (eye icon). Clicking hides/shows all priority‑flag columns.
  * Banner is **position: fixed; top: 0; width: 100%; z-index: 1000; background: #212121**. Tasks panel scrolls underneath.

* **Primary Display Area**

  * All app content is wrapped in a container `<div id="dun-app">`, centered with `margin: 0 auto; max-width: 960px; padding: 0 1.5rem;`.
  * The content area slides beneath the header when scrolling.
  * **Tasks View** is always visible (no other main panels).
  * **Task View** opens as a side drawer or modal when a task is edited (see details below).
  * Smooth fade/slide transitions for opening/closing Task View.

* **Theme** – Dark (#212121 bg, #dddddd fg, #00CEF7 accent). Hover lightens accent ≈ 20 %. Icon states: Active 100 %, Inactive 50 %, Hover +25 % brightness.

---

## 2. Tasks View  *(verbatim behaviours preserved; Priority UI embedded)*

2.1 **Task List & Sections**

* Tasks stored in a single array; sections: **Triage, A, B, C**.
* Expandable/collapsible headers.
* Unlimited nesting up to **5 levels**, indented visually.
* Parent tasks have expand/collapse arrows.

2.2 **Priority Flags Embedded**

* Columns for **Fire, Fast, Flow, Fear, First** appear directly in the Tasks table next to each title.
* Tooltips (verbatim):

  * **Fire:** “Is this task urgent and needs immediate attention?”
  * **Fast:** “Can this task be completed in under three minutes?”
  * **Flow:** “Am I at risk of overindulging in this task instead of maintaining balance?”
  * **Fear:** “Is this task something I should avoid due to potential negative outcomes?”
  * **First:** “Does this task offer an 80% result with minimal effort?”
* **Show/Hide Priority Flags toggle** instantly adds/removes these columns via CSS `display` with 0.2 s fade.

2.3 **Task Control Panel**  *(unchanged)*

* Edit (pencil), Play (triangle – now opens Task View), Delete (×).
* Control panel **fades in 0.2 s, fades out 1 s** on hover‑out.
* Revisit date label appears/fades in sync; clicking opens date‑picker popup.

2.4 **Keyboard & Drag‑and‑Drop Movement**

* **Up/Down** move within section; **Right/Left** indent/outdent.
* Drag‑and‑drop vertical reorder + horizontal nesting with visual drop zones.

2.5 **Quick Add** – creates task in Triage with default flags false, `revisitDate=null`.

---

## 3. Task View  *(single‑task details panel)*

* Opens when user clicks **Edit** icon or task title.
* Fields (verbatim): **Title, Revisit Date, Scheduled Time, Overview, Details, Overall Time Estimate**.
* Autosave on blur or explicit Save.
* Completion checkbox, Delete with 5 s Undo toast.
* Start/Play button (optional future extension) simply closes Task View for this MVP.
* Any change updates the Tasks View immediately.

---

## 4. Real‑Time Updates & Error Handling

(Verbatim from Section 4)

* Immediate UI feedback, toast notifications, 5 s Undo delete, local fallback, debug logging.

---

## 5. Data Model, Performance, Styling, Roadmap, Platform Notes

(Verbatim content retained; Hours/Reflect/Minute specific fields may remain for future expansion but are not surfaced in UI.)

---

**Note:** All references to Hours View, Reflect View, Minute View, and their icons have been removed for this standalone build. Logic and styles remain **identical** to the master requirements in every other respect.
